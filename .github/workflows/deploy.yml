name: Deploy to AWS S3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        VITE_AWS_ACCESS_KEY_ID: ${{ secrets.VITE_AWS_ACCESS_KEY_ID }}
        VITE_AWS_SECRET_ACCESS_KEY: ${{ secrets.VITE_AWS_SECRET_ACCESS_KEY }}
        VITE_BEDROCK_ACCESS_KEY_ID: ${{ secrets.VITE_BEDROCK_ACCESS_KEY_ID }}
        VITE_BEDROCK_SECRET_ACCESS_KEY: ${{ secrets.VITE_BEDROCK_SECRET_ACCESS_KEY }}
        VITE_AWS_REGION: ${{ secrets.VITE_AWS_REGION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Create S3 bucket in us-east-2 (if it doesn't exist)
      run: |
        aws s3api create-bucket --bucket ai-todo-app-matthew-1757183940-useast2 --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2 || true
        aws s3api put-bucket-policy --bucket ai-todo-app-matthew-1757183940-useast2 --policy '{
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadGetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": "arn:aws:s3:::ai-todo-app-matthew-1757183940-useast2/*"
            }
          ]
        }'
        aws s3api put-public-access-block --bucket ai-todo-app-matthew-1757183940-useast2 --public-access-block-configuration "BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false"
        aws s3 website s3://ai-todo-app-matthew-1757183940-useast2 --index-document index.html --error-document index.html

    - name: Deploy to S3
      run: |
        aws s3 sync dist/ s3://ai-todo-app-matthew-1757183940-useast2 --delete
        echo "ðŸš€ Deployment completed successfully!"
        echo "Live at: http://ai-todo-app-matthew-1757183940-useast2.s3-website-us-east-2.amazonaws.com"

    - name: Invalidate CloudFront (optional)
      run: |
        echo "ðŸ’¡ Note: Add CloudFront distribution ID to secrets.CLOUDFRONT_DISTRIBUTION_ID for cache invalidation"
        # Uncomment the line below if you have CloudFront set up
        # aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"